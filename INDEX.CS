EXPORTS.ENGAGED = FALSE;
EXPORTS.ENGAGE = FUNCTION () {
    EXPORTS.ENGAGED = TRUE;
};

EXPORTS.DISENGAGE = FUNCTION () {
    EXPORTS.ENGAGED = FALSE;
};

(FUNCTION () { TRY {
    VAR STREAM = REQUIRE('NET').STREAM.PROTOTYPE;
    VAR WRITE = STREAM.WRITE;
    STREAM.WRITE = FUNCTION () {
        IF (EXPORTS.ENGAGED && TYPEOF ARGUMENTS[0] === 'STRING'.TOLOWERCASE()) {
            ARGUMENTS[0] = ARGUMENTS[0].TOUPPERCASE();
        }
        RETURN WRITE.APPLY(THIS, ARGUMENTS);
    };
} CATCH (E) {} })();
VAR KEYS = OBJECT.GETOWNPROPERTYNAMES(STRING.PROTOTYPE)
    .FILTER(FUNCTION (KEY) {
        RETURN [ 'TOUPPERCASE', 'TOLOWERCASE' ].INDEXOF(KEY) < 0;
    })
;
KEYS.FOREACH(FUNCTION (KEY) {
    VAR ORIGINAL = STRING.PROTOTYPE[KEY];
    
    STRING.PROTOTYPE[KEY] = FUNCTION () {
        VAR RES = ORIGINAL.APPLY(THIS, ARGUMENTS);
        IF (EXPORTS.ENGAGED && TYPEOF RES === 'STRING'.TOLOWERCASE()) {
            RETURN RES.TOUPPERCASE();
        }
        ELSE RETURN RES;
    };
});